    property color colorLight: Qt.hsla(0.5, 0.0, 0.9, 1.0)
    property color colorDarkGray: Qt.hsla(0.0, 0.0, 0.21, 1.0)
    property color colorGrayAlpha: Qt.hsla(0.0, 0.0, 1.0, 0.15)
    property color colorGray: Qt.hsla(0.0, 0.0, 0.39, 1.0)
    property color colorGreen: Qt.hsla(0.363, 0.52, 0.61, 1.0)
    property color colorBlue: Qt.hsla(0.55, 0.92, 0.55, 1.0)
    property color colorOrange: Qt.hsla(0.08, 0.7, 0.65, 1.0)
    property color colorPurple: Qt.hsla(0.77, 0.34, 0.64, 1.0)
    property color colorPurpleLight: Qt.hsla(0.77, 0.34, 0.74, 1.0)

        path: Path
        {
            startX: 0
            startY: view.height / 2

            PathAttribute { name: "size"; value: view.itemSize }
            PathAttribute { name: "opacity"; value: 0.25 }
            PathCurve
            {
                x: view.width / 5
                y: view.height / 2
            }
            PathCurve
            {
                x: view.width / 5 * 2
                y: view.height / 2
            }
            PathAttribute { name: "size"; value: view.itemSize }
            PathAttribute { name: "opacity"; value: 0.5 }
            PathPercent { value: 0.49 }

            PathLine { relativeX: 0; relativeY: 0 } // разделитель

            PathAttribute { name: "size"; value: view.itemSize * 2 }
            PathAttribute { name: "opacity"; value: 1 }
            PathLine
            {
                x: view.width / 5 * 3
                y: view.height / 2
            }
            PathAttribute { name: "size"; value: view.itemSize * 2 }
            PathAttribute { name: "opacity"; value: 1 }
            PathPercent { value: 0.51 }

            PathLine { relativeX: 0; relativeY: 0 } // разделитель

            PathAttribute { name: "size"; value: view.itemSize }
            PathAttribute { name: "opacity"; value: 0.5 }
            PathCurve
            {
                x: view.width / 5 * 4
                y: view.height / 2
            }
            PathCurve
            {
                x: view.width
                y: view.height / 2
            }
            PathPercent { value: 1 }
            PathAttribute { name: "size"; value: view.itemSize }
            PathAttribute { name: "opacity"; value: 0.25 }
        }

    Button
    {
        id: buttonSend

        height: 45
        anchors.right: parent.right
        anchors.rightMargin: 40
        anchors.left: parent.left
        anchors.leftMargin: 40
        anchors.top: parent.top
        anchors.topMargin: 120

        contentItem: Rectangle{
            color: "#00ffffff"
            Text {
                id: txt
                height: 25
                anchors.left: parent.left
                anchors.leftMargin: 6
                anchors.top: parent.top
                anchors.topMargin: 6
                color: Qt.hsla(0.5, 0.0, 0.9, 1.0)
                text: qsTr("Отправить")
                elide: Text.ElideNone
                font.weight: Font.ExtraBold
                font.family: "Arial"
                font.bold: true
                font.pixelSize: 20
                horizontalAlignment: Text.AlignLeft
                verticalAlignment: Text.AlignVCenter
            }
            Image {
                width: 24
                height: 24
                anchors.left: txt.right
                anchors.leftMargin: 10
                anchors.verticalCenter: parent.verticalCenter
                source: "rcc/icons/small/upload.png"
            }
        }

        background: Rectangle {
            implicitWidth: parent.width
            implicitHeight: parent.height
            anchors.fill: parent
            radius: 10
            border.width: 0
            color: buttonSend.pressed ? Qt.hsla(0.77, 0.34, 0.74, 1.0) : Qt.hsla(0.77, 0.34, 0.64, 1.0)
        }
    }

    RadioButton
    {
        id: checkerSupervisor
        width: 48
        height: 48
        anchors.left: parent.left
        anchors.leftMargin: 70
        anchors.top: buttonSend.bottom
        anchors.topMargin: 20
        checked: false
        checkable: true

        indicator: Rectangle {
            implicitWidth: parent.width
            implicitHeight: parent.height
            radius: 25
            color: checkerSupervisor.checked ? "#662e95e8" : "#668c8c8c"
            border.width: 0
            Image {
                fillMode: Image.Stretch
                anchors.fill: parent
                anchors.topMargin: 10
                anchors.bottomMargin: 10
                anchors.rightMargin: 10
                anchors.leftMargin: 10
                source: "rcc/icons/64/supervisor.png"
            }
        }
    }

    RadioButton {
        id: checkerArtists
        x: 50
        y: 1
        width: 48
        height: 48
        anchors.right: buttonSend.right
                    anchors.rightMargin: 30
                    anchors.top: buttonSend.bottom
                    anchors.topMargin: 20
        indicator: Rectangle {
            color: checkerArtists.checked ? "#662e95e8" : "#668c8c8c"
            radius: 25
            implicitWidth: parent.width
            implicitHeight: parent.height
            border.width: 0
            Image {
                source: "rcc/icons/64/artists.png"
                anchors.topMargin: 10
                anchors.bottomMargin: 10
                anchors.fill: parent
                anchors.rightMargin: 10
                fillMode: Image.Stretch
                anchors.leftMargin: 10
            }
        }
        anchors.topMargin: 20
        anchors.top: buttonSend.bottom
        checkable: true
        checked: false
    }

    Rectangle {
        id: rectangleDragdrop
        height: 72
        color: "#19ffffff"
        radius: 10
        border.width: 0
        anchors.right: parent.right
        anchors.rightMargin: 15
        anchors.left: parent.left
        anchors.leftMargin: 15
        anchors.top: checkerArtists.bottom
        anchors.topMargin: 20

        Text {
            id: text1Dragdrop
            height: 25
            anchors.centerIn: parent
            color: "#7fb7a5"
            text: qsTr("Drag + Drop")
            anchors.verticalCenterOffset: -6
            renderType: Text.QtRendering
            font.family: "Arial"
            wrapMode: Text.WordWrap
            font.bold: true
            verticalAlignment: Text.AlignVCenter
            horizontalAlignment: Text.AlignHCenter
            font.pixelSize: 20
        }

        Text {
            id: text2Dragdrop
            x: 72
            height: 15
            color: "#e6e6e6"
            text: qsTr("Файлы")
            anchors.top: text1Dragdrop.bottom
            anchors.topMargin: 0
            anchors.horizontalCenter: text1Dragdrop.horizontalCenter
            font.family: "Arial"
            font.pixelSize: 13
            font.bold: true
            wrapMode: Text.WordWrap
            verticalAlignment: Text.AlignVCenter
            horizontalAlignment: Text.AlignHCenter
        }
    }
    
    ListView {
        id: listFiles
        highlightFollowsCurrentItem: true
        anchors.bottom: parent.bottom
        anchors.bottomMargin: 15
        anchors.right: rectangleDragdrop.right
        anchors.rightMargin: 0
        anchors.left: rectangleDragdrop.left
        anchors.leftMargin: 0
        anchors.top: rectangleDragdrop.bottom
        anchors.topMargin: 20
        spacing: 3
        delegate: Item
        {
            x: 5
            height: 60
            Row
            {
                spacing: 10
                Image
                {
                    width: 40
                    height: 40
                    source: iconPath
                    fillMode: Image.Stretch
                    scale: 0.9
                }
                Text
                {
                    text: name
                    font.bold: true
                    anchors.verticalCenter: parent.verticalCenter
                    color: Qt.hsla(0.5, 0.0, 0.9, 1.0)
                }
            }
        }
        model: ListModel {
            ListElement {
                name: "car_rastr"
                iconPath: "rcc/icons/files/png.png"
            }

            ListElement {
                name: "description"
                iconPath: "rcc/icons/files/txt.png"
            }

            ListElement {
                name: "car_svg"
                iconPath: "rcc/icons/files/svg.png"
            }

            ListElement {
                name: "car_vector"
                iconPath: "rcc/icons/files/ai.png"
            }
        }
    

    TabButton 
    {
            id: tabbuttonFiles
            checked: true
            contentItem: Rectangle
            {
                color: Qt.hsla(0.0, 0.0, 0.0, 0.0)
                Image
                {
                    id: imgFiles
                    width: 48
                    height: 48
                    fillMode: Image.PreserveAspectFit
                    anchors.centerIn: parent
                    source: "rcc/icons/files.png"
                    smooth: true
                    visible: flase
                }
                FX.ColorOverlay
                {
                    anchors.fill: imgFiles
                    source: imgFiles
                    color: tabbuttonFiles.checked ? Qt.hsla(0.127, 0.8, 0.7, 1.0) : Qt.hsla(0.127, 0.8, 0.7, 0.0)
                }
            }

            background: Rectangle
            {
                implicitWidth: parent.width
                implicitHeight: parent.height
                anchors.fill: parent
                radius: 0
                border.width: 0
                color: Qt.hsla(0.0, 0.0, 0.39, 1.0)
                Rectangle
                {
                    height: 3
                    anchors.right: parent.right
                    anchors.rightMargin: 10
                    anchors.left: parent.left
                    anchors.leftMargin: 10
                    anchors.bottom: parent.bottom
                    anchors.bottomMargin: 0
                    color: tabbuttonTasks.checked ? Qt.hsla(0.127, 0.8, 0.7, 1.0) : Qt.hsla(0.5, 0.0, 0.9, 1.0)
                }
            }
    }


            contentItem:Image
        {
            width: 32
            height: 32
            fillMode: Image.Stretch
            source: "../rcc/icons/exit.png"
        }